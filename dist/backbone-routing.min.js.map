{"version":3,"file":"backbone-routing.js","sources":["backbone-routing.js","/source/backbone-routing.js"],"names":["global","factory","exports","module","require","define","amd","Backbone","Routing","Metal","this","Route","Class","extend","constructor","listenTo","history","_onHistoryRoute","_super","apply","arguments","enter","args","undefined","onBeforeEnter","trigger","concat","onBeforeFetch","Promise","resolve","then","_this","fetch","onFetch","onBeforeRender","render","onRender","onEnter","err","onError","onErrorEnter","exit","onBeforeExit","onBeforeDestroy","_this2","destroy","onDestroy","onExit","stopListening","onErrorExit","router","_isActive","Router","isActive","execute","callback","wasInactive","onBeforeRoute","_this3","_execute","onRoute","_prevRoute","route","_this4","backbone_routing"],"mappings":"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","sourceRoot":"/source/","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('backbone'), require('backbone-metal')) :\n  typeof define === 'function' && define.amd ? define(['backbone', 'backbone-metal'], factory) :\n  global.Backbone.Routing = factory(global.Backbone, global.Metal)\n}(this, function (Backbone, Metal) { 'use strict';\n\n  const Route = Metal.Class.extend({\n    constructor() {\n      this.listenTo(Backbone.history, 'route', this._onHistoryRoute);\n      this._super(...arguments);\n    },\n\n    /**\n     * @public\n     * @method enter\n     * @returns {Promise}\n     */\n    enter(args = []) {\n      this.onBeforeEnter(...args);\n      this.trigger('before:enter', this, ...args);\n      this.onBeforeFetch(...args);\n      this.trigger('before:fetch', this, ...args);\n\n      return Promise.resolve()\n        .then(() => this.fetch(...args))\n        .then(() => {\n          this.onFetch(...args);\n          this.trigger('fetch', this, ...args);\n          this.onBeforeRender(...args);\n          this.trigger('before:render', this, ...args);\n        })\n        .then(() => this.render(...args))\n        .then(() => {\n          this.onRender(...args);\n          this.trigger('render', this, ...args);\n          this.onEnter(...args);\n          this.trigger('enter', this, ...args);\n        })\n        .catch(err => {\n          this.onError(err);\n          this.trigger('error', this, err);\n          this.onErrorEnter(err);\n          this.trigger('error:enter', this, err);\n          throw err;\n        });\n    },\n\n    /**\n     * @public\n     * @method exit\n     * @returns {Promise}\n     */\n    exit() {\n      this.onBeforeExit();\n      this.trigger('before:exit', this);\n      this.onBeforeDestroy();\n      this.trigger('before:destroy', this);\n\n      return Promise.resolve()\n        .then(() => this.destroy())\n        .then(() => {\n          this.onDestroy();\n          this.trigger('destroy', this);\n          this.onExit();\n          this.trigger('exit', this);\n          this.stopListening();\n        })\n        .catch(err => {\n          this.onError(err);\n          this.trigger('error', this, err);\n          this.onErrorExit(err);\n          this.trigger('error:exit', this, err);\n          this.stopListening();\n          throw err;\n        });\n    },\n\n    /**\n     * @public\n     * @abstract\n     * @method onBeforeEnter\n     */\n    onBeforeEnter() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onBeforeFetch\n     */\n    onBeforeFetch() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method fetch\n     */\n    fetch() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onFetch\n     */\n    onFetch() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onBeforeRender\n     */\n    onBeforeRender() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method render\n     */\n    render() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onRender\n     */\n    onRender() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onEnter\n     */\n    onEnter() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onBeforeExit\n     */\n    onBeforeExit() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onBeforeDestroy\n     */\n    onBeforeDestroy() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method destroy\n     */\n    destroy() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onDestroy\n     */\n    onDestroy() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onExit\n     */\n    onExit() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onError\n     */\n    onError() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onErrorEnter\n     */\n    onErrorEnter() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onErrorExit\n     */\n    onErrorExit() {},\n\n    /**\n     * @private\n     * @method _onHistoryRoute\n     */\n    _onHistoryRoute(router) {\n      this._isActive = (router === this);\n    }\n  });\n\n  /**\n   * @public\n   * @class Router\n   */\n  const Router = Metal.Class.extend({\n    constructor() {\n      this.listenTo(Backbone.history, 'route', this._onHistoryRoute);\n      this._super(...arguments);\n    },\n\n    /**\n     * @public\n     * @method isActive\n     * @returns {Boolean}\n     */\n    isActive() {\n      return !!this._isActive;\n    },\n\n    /**\n     * @public\n     * @method execute\n     * @param {Function} callback\n     * @param {Array} [args]\n     */\n    execute(callback, args) {\n      var wasInactive = !this._isActive;\n      if (wasInactive) {\n        this.onBeforeEnter();\n        this.trigger('before:enter', this);\n      }\n\n      this.onBeforeRoute();\n      this.trigger('before:route', this);\n\n      return Promise.resolve().then(() => {\n        return this._execute(callback, args);\n      }).then(() => {\n        this.onRoute();\n        this.trigger('route', this);\n\n        if (wasInactive) {\n          this.onEnter();\n          this.trigger('enter', this);\n        }\n      }).catch(err => {\n        this.onError(err);\n        this.trigger('error', this, err);\n        Backbone.history.trigger('error', this, err);\n      });\n    },\n\n    /**\n     * @public\n     * @abstract\n     * @method onBeforeEnter\n     */\n    onBeforeEnter() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onBeforeRoute\n     */\n    onBeforeRoute() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onRoute\n     */\n    onRoute() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onEnter\n     */\n    onEnter() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onError\n     */\n    onError() {},\n\n    /**\n     * @public\n     * @method execute\n     * @param {Function} callback\n     * @param {Array} [args]\n     * @returns {Promise}\n     */\n    _execute(callback, args) {\n      return Promise.resolve().then(() => {\n        if (Router._prevRoute instanceof Route) {\n          return Router._prevRoute.exit();\n        }\n      }).then(() => {\n        let route = Router._prevRoute = callback.apply(this, args);\n        if (route instanceof Route) {\n          route.router = this;\n          return route.enter(args);\n        }\n      });\n    },\n\n    /**\n     * @private\n     * @method _onHistoryRoute\n     * @param {Router} router\n     */\n    _onHistoryRoute(router) {\n      this._isActive = (router === this);\n    }\n  }, {\n\n    /**\n     * @private\n     * @member _prevRoute\n     */\n    _prevRoute: null\n  });\n\n  var backbone_routing = {Route, Router};\n\n  return backbone_routing;\n\n}));\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('backbone'), require('backbone-metal')) :\n  typeof define === 'function' && define.amd ? define(['backbone', 'backbone-metal'], factory) :\n  global.Backbone.Routing = factory(global.Backbone, global.Metal)\n}(this, function (Backbone, Metal) { 'use strict';\n\n  const Route = Metal.Class.extend({\n    constructor() {\n      this.listenTo(Backbone.history, 'route', this._onHistoryRoute);\n      this._super(...arguments);\n    },\n\n    /**\n     * @public\n     * @method enter\n     * @returns {Promise}\n     */\n    enter(args = []) {\n      this.onBeforeEnter(...args);\n      this.trigger('before:enter', this, ...args);\n      this.onBeforeFetch(...args);\n      this.trigger('before:fetch', this, ...args);\n\n      return Promise.resolve()\n        .then(() => this.fetch(...args))\n        .then(() => {\n          this.onFetch(...args);\n          this.trigger('fetch', this, ...args);\n          this.onBeforeRender(...args);\n          this.trigger('before:render', this, ...args);\n        })\n        .then(() => this.render(...args))\n        .then(() => {\n          this.onRender(...args);\n          this.trigger('render', this, ...args);\n          this.onEnter(...args);\n          this.trigger('enter', this, ...args);\n        })\n        .catch(err => {\n          this.onError(err);\n          this.trigger('error', this, err);\n          this.onErrorEnter(err);\n          this.trigger('error:enter', this, err);\n          throw err;\n        });\n    },\n\n    /**\n     * @public\n     * @method exit\n     * @returns {Promise}\n     */\n    exit() {\n      this.onBeforeExit();\n      this.trigger('before:exit', this);\n      this.onBeforeDestroy();\n      this.trigger('before:destroy', this);\n\n      return Promise.resolve()\n        .then(() => this.destroy())\n        .then(() => {\n          this.onDestroy();\n          this.trigger('destroy', this);\n          this.onExit();\n          this.trigger('exit', this);\n          this.stopListening();\n        })\n        .catch(err => {\n          this.onError(err);\n          this.trigger('error', this, err);\n          this.onErrorExit(err);\n          this.trigger('error:exit', this, err);\n          this.stopListening();\n          throw err;\n        });\n    },\n\n    /**\n     * @public\n     * @abstract\n     * @method onBeforeEnter\n     */\n    onBeforeEnter() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onBeforeFetch\n     */\n    onBeforeFetch() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method fetch\n     */\n    fetch() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onFetch\n     */\n    onFetch() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onBeforeRender\n     */\n    onBeforeRender() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method render\n     */\n    render() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onRender\n     */\n    onRender() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onEnter\n     */\n    onEnter() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onBeforeExit\n     */\n    onBeforeExit() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onBeforeDestroy\n     */\n    onBeforeDestroy() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method destroy\n     */\n    destroy() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onDestroy\n     */\n    onDestroy() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onExit\n     */\n    onExit() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onError\n     */\n    onError() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onErrorEnter\n     */\n    onErrorEnter() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onErrorExit\n     */\n    onErrorExit() {},\n\n    /**\n     * @private\n     * @method _onHistoryRoute\n     */\n    _onHistoryRoute(router) {\n      this._isActive = (router === this);\n    }\n  });\n\n  /**\n   * @public\n   * @class Router\n   */\n  const Router = Metal.Class.extend({\n    constructor() {\n      this.listenTo(Backbone.history, 'route', this._onHistoryRoute);\n      this._super(...arguments);\n    },\n\n    /**\n     * @public\n     * @method isActive\n     * @returns {Boolean}\n     */\n    isActive() {\n      return !!this._isActive;\n    },\n\n    /**\n     * @public\n     * @method execute\n     * @param {Function} callback\n     * @param {Array} [args]\n     */\n    execute(callback, args) {\n      var wasInactive = !this._isActive;\n      if (wasInactive) {\n        this.onBeforeEnter();\n        this.trigger('before:enter', this);\n      }\n\n      this.onBeforeRoute();\n      this.trigger('before:route', this);\n\n      return Promise.resolve().then(() => {\n        return this._execute(callback, args);\n      }).then(() => {\n        this.onRoute();\n        this.trigger('route', this);\n\n        if (wasInactive) {\n          this.onEnter();\n          this.trigger('enter', this);\n        }\n      }).catch(err => {\n        this.onError(err);\n        this.trigger('error', this, err);\n        Backbone.history.trigger('error', this, err);\n      });\n    },\n\n    /**\n     * @public\n     * @abstract\n     * @method onBeforeEnter\n     */\n    onBeforeEnter() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onBeforeRoute\n     */\n    onBeforeRoute() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onRoute\n     */\n    onRoute() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onEnter\n     */\n    onEnter() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method onError\n     */\n    onError() {},\n\n    /**\n     * @public\n     * @method execute\n     * @param {Function} callback\n     * @param {Array} [args]\n     * @returns {Promise}\n     */\n    _execute(callback, args) {\n      return Promise.resolve().then(() => {\n        if (Router._prevRoute instanceof Route) {\n          return Router._prevRoute.exit();\n        }\n      }).then(() => {\n        let route = Router._prevRoute = callback.apply(this, args);\n        if (route instanceof Route) {\n          route.router = this;\n          return route.enter(args);\n        }\n      });\n    },\n\n    /**\n     * @private\n     * @method _onHistoryRoute\n     * @param {Router} router\n     */\n    _onHistoryRoute(router) {\n      this._isActive = (router === this);\n    }\n  }, {\n\n    /**\n     * @private\n     * @member _prevRoute\n     */\n    _prevRoute: null\n  });\n\n  var backbone_routing = {Route, Router};\n\n  return backbone_routing;\n\n}));\n"]}